<%- contentFor('nav') %> 
  <%- include('./components/navbar.ejs') %> 
<%- contentFor('content') %>
  <div id="title-container" class="form-floating mb-3">
    <input type="text" class="form-control" id="floatingInput" name="title" placeholder="Title">
    <label for="floatingInput">Title</label>
  </div>
  <div id="editor" class="mb-3" style="height: 30rem;"></div>
  <div id="button-container" class="d-flex justify-content-between align-items-center">
    <div class="d-flex gap-2">
      <form id="post-create" action="/api/posts">
        <input class="postBtn btn btn-primary" type="submit" value="Create">
      </form>
      <form id="post-publish" action="/api/posts">
        <input class="postBtn btn btn-success" type="submit" value="Create & Publish">
      </form>
    </div>

    <% if (data) { %>
      <form id="post-delete" action="/api/posts">
        <button type="submit" class="btn text-danger">
          <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
            <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z"/>
          </svg>
        </button>
      </form> 
    <% } %>
  </div>

<!-- Include the Quill library -->
  <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

  <!-- Initialize Quill editor -->
  <script>
    var quill = new Quill('#editor', {
      theme: 'snow'
    });
  </script>

  <script>
    let populateEditor = (data) => {
      if (data) {
        let {postTitle, postContent} = data
        
        document.getElementById('floatingInput').value = postTitle
        quill.setContents(JSON.parse(postContent).ops)
      }
      return;
    }

    populateEditor(<%- JSON.stringify(data) %>)
  </script>

  <script>
    const unpublishEvent = document.querySelector('#post-create')
    const publishEvent = document.querySelector('#post-publish')

    const postAction = <%- JSON.stringify(data) %> ? 'PUT' : 'POST';
    
    const postContentToServer = async (payload, method) => {
      const url = <%- JSON.stringify(apiUrl) %>
      const options = {
        method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(payload)
    }

    try {
        const data = await fetch(url, options);
        if (data.status === 200) {
          return data.json();  
        } else {
          throw data.status
        }
      } catch (error) {
       return error 
      }

    }

    unpublishEvent.addEventListener('submit', (e) => {
      e.preventDefault();

      const formData = {
        postTitle: document.getElementById('floatingInput').value,
        postContentPreview: quill.getText(),
        postContent: quill.getContents(),
        postPublishedStatus: false
      }

      postContentToServer(formData, postAction)
        .then(data => {
          console.log(data)
        }).catch(err => console.log(err))
    })

    publishEvent.addEventListener('submit', (e) => {
      e.preventDefault();

       const formData = {
        postTitle: document.getElementById('floatingInput').value,
        postContentPreview: quill.getText(),
        postContent: quill.getContents(),
        postPublishedStatus: true
      }   

      postContentToServer(formData, postAction)
        .then(data => {
          console.log(data)
        })
    })

    let initDeleteButton = (data) => {
      if (data) {
        const deleteEvent = document.querySelector('#post-delete');
        
        deleteEvent.addEventListener('submit', (e) => {
          e.preventDefault();

          postContentToServer({}, 'DELETE')
            .then(data => {
              console.log(data)
            })
        })
      }
      return;
    }

    initDeleteButton(<%- JSON.stringify(data) %>)
  </script>