<%- contentFor('nav') %> 
  <%- include('./components/navbar.ejs') %> 
<%- contentFor('content') %>
  <div id="title-container" class="form-floating mb-3">
    <input type="text" class="form-control" id="floatingInput" name="title" placeholder="Title">
    <label for="floatingInput">Title</label>
  </div>
  <div id="editor" class="mb-3" style="height: 30rem;"></div>
  <div id="button-container" class="d-flex gap-2">
    <form id="post-create" action="/api/posts" method="post">
      <input class="postBtn btn btn-primary" type="submit" value="Create">
    </form>
    <form id="post-publish" action="/api/posts" method="post">
      <input class="postBtn btn btn-success" type="submit" value="Create & Publish">
    </form>
  </div>

  <!-- Include the Quill library -->
  <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

  <!-- Initialize Quill editor -->
  <script>
    var quill = new Quill('#editor', {
      theme: 'snow'
    });
  </script>

  <script>
    const unpublishEvent = document.querySelector('#post-create')
    const publishEvent = document.querySelector('#post-publish')

    const postContentToServer = async (payload) => {

      const postAction = <%- JSON.stringify(postAction) %>;
      const url = <%- JSON.stringify(postUrl) %>;
      const options = {
        method: postAction,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(payload)
      }

      try {
        const data = await fetch(url, options);
        if (data.status === 200) {
          return data.json();  
        } else {
          throw data.status
        }
      } catch (error) {
       return error 
      }

    }

    unpublishEvent.addEventListener('submit', (e) => {
      e.preventDefault();

      const formData = {
        postTitle: document.getElementById('floatingInput').value,
        postContentPreview: quill.getText(),
        postContent: quill.getContents(),
        postPublishedStatus: false
      }

      postContentToServer(formData)
        .then(data => {
          console.log(data)
        }).catch(err => console.log(err))
    })

    publishEvent.addEventListener('submit', (e) => {
      e.preventDefault();

       const formData = {
        postTitle: document.getElementById('floatingInput').value,
        postContentPreview: quill.getText(),
        postContent: quill.getContents(),
        postPublishedStatus: true
      }   

      postContentToServer(formData)
        .then(data => {
          console.log(data)
        })
    })
  </script>
  <script>
    let populateEditor = (data) => {
      let {postTitle, postContent} = data
      if (postContent) {
        document.getElementById('floatingInput').value = postTitle
        quill.setContents(postContent.ops)
      }
      return;
    }

    populateEditor(<%- JSON.stringify(data) %>)
  </script>